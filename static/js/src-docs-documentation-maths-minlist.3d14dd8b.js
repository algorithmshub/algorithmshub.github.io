(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{"./src/docs/documentation/maths/minlist.mdx":function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return u});var a=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),s=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js"),m=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js"),o=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js"),r=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js"),i=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js"),l=t("./node_modules/react/index.js"),p=t.n(l),c=t("./node_modules/@mdx-js/tag/dist/index.js"),u=function(e){function n(e){var t;return Object(s.a)(this,n),(t=Object(o.a)(this,Object(r.a)(n).call(this,e))).layout=null,t}return Object(i.a)(n,e),Object(m.a)(n,[{key:"render",value:function(){var e=this.props,n=e.components;Object(a.a)(e,["components"]);return p.a.createElement(c.MDXTag,{name:"wrapper",components:n},p.a.createElement(c.MDXTag,{name:"h1",components:n,props:{id:"minlist"}},"MinList"),p.a.createElement(c.MDXTag,{name:"p",components:n},p.a.createElement(c.MDXTag,{name:"strong",components:n,parentName:"p"},"Example")),p.a.createElement(c.MDXTag,{name:"p",components:n},"Find the minimum number of an array."),p.a.createElement(c.MDXTag,{name:"p",components:n},p.a.createElement(c.MDXTag,{name:"strong",components:n,parentName:"p"},"Java")),p.a.createElement(c.MDXTag,{name:"pre",components:n},p.a.createElement(c.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"public class MinList {\n  public static void main(String[] args) {\n    int result = findMin(new int[]{ 12, 35, 7, 10, 34, 2 });\n    System.out.println(result);\n  }\n\n  /**\n    * Find the minimum number of an array of numbers\n    *\n    * @param a the array contains element\n    * @return min value\n    */\n  public static int findMin(int[] a) {\n    int minValue = a[0];\n\n    for (int i = 1; i < a.length; i++) {\n      if (a[i] < minValue) {\n        minValue = a[i];\n      }\n    }\n\n    return minValue;\n  }\n}\n")))}}]),n}(p.a.Component);"undefined"!==typeof u&&u&&u===Object(u)&&Object.defineProperty(u,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"src/docs/documentation/maths/minlist.mdx"}}),"undefined"!==typeof u&&u&&u===Object(u)&&Object.defineProperty(u,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"src/docs/documentation/maths/minlist.mdx"}}),u.isMDXComponent=!0}}]);
//# sourceMappingURL=src-docs-documentation-maths-minlist.7525b397f474250a8b7d.js.map