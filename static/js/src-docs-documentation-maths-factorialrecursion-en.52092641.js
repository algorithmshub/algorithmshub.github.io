(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{"./src/docs/documentation/maths/factorialrecursion.en.mdx":function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return c}));var a=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),o=(t("./node_modules/react/index.js"),t("./node_modules/@mdx-js/react/dist/esm.js")),i={};function c(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object.assign({},i,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"factorialrecursion"},"FactorialRecursion"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"What is Factorial?")),Object(o.b)("p",null,"The factorial of a positive integer ",Object(o.b)("inlineCode",{parentName:"p"},"n"),", denoted by ",Object(o.b)("inlineCode",{parentName:"p"},"n!"),", is the product of all positive integers less than or equal to ",Object(o.b)("inlineCode",{parentName:"p"},"n"),"."),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"n! = n * (n - 1) * (n - 2) * (n - 3) ... 3 * 2 * 1")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Example")),Object(o.b)("p",null,"The factorial of ",Object(o.b)("inlineCode",{parentName:"p"},"0!")," is ",Object(o.b)("inlineCode",{parentName:"p"},"1")," The factorial of ",Object(o.b)("inlineCode",{parentName:"p"},"5!")," is ",Object(o.b)("inlineCode",{parentName:"p"},"5 * 4 * 3 * 2 * 1 = 120"),"."),Object(o.b)("p",null,"Write a function to calculate factorial of n using iteration."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Java")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"public class FactorialRecursion {\n  public static void main(String[] args) {\n    System.out.println(factorial(0) == 1);\n    System.out.println(factorial(1) == 1);\n    System.out.println(factorial(2) == 2);\n    System.out.println(factorial(3) == 6);\n  }\n\n  public static long factorial(int n) {\n    return n == 0 || n == 1 ? 1 : n * factorial(n - 1);\n  }\n}\n")))}c&&c===Object(c)&&Object.isExtensible(c)&&Object.defineProperty(c,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"src/docs/documentation/maths/factorialrecursion.en.mdx"}}),c.isMDXComponent=!0}}]);
//# sourceMappingURL=src-docs-documentation-maths-factorialrecursion-en.2996003d06fac7d5f91f.js.map