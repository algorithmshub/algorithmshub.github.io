(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{"./src/docs/documentation/maths/aliquotsum.en.mdx":function(n,t,e){"use strict";e.r(t),e.d(t,"default",(function(){return s}));var i=e("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),u=(e("./node_modules/react/index.js"),e("./node_modules/@mdx-js/react/dist/esm.js")),o={};function s(n){var t=n.components,e=Object(i.a)(n,["components"]);return Object(u.b)("wrapper",Object.assign({},o,e,{components:t,mdxType:"MDXLayout"}),Object(u.b)("h1",{id:"aliquotsum"},"AliquotSum"),Object(u.b)("p",null,Object(u.b)("strong",{parentName:"p"},"What is Aliquot sum?")),Object(u.b)("p",null,"In number theory, the aliquot sum s(n) of a positive integer n is the sum of all proper divisors of n, that is, all divisors of n other than n itself."),Object(u.b)("p",null,Object(u.b)("strong",{parentName:"p"},"Example")),Object(u.b)("p",null,"Input: 12"),Object(u.b)("p",null,"Output: 16"),Object(u.b)("p",null,"Explanation: proper divisors of 12 is 1, 2, 3, 4, 6 and sum is 1 + 2 + 3 + 4 + 6 = 16"),Object(u.b)("p",null,Object(u.b)("strong",{parentName:"p"},"Java")),Object(u.b)("pre",null,Object(u.b)("code",{parentName:"pre",className:"language-js"},"public class AliquotSum {\n  public static void main(String[] args) {\n    System.out.println(aliquotSum1(12) == 16);\n    System.out.println(aliquotSum1(15) == 9);\n\n    System.out.println(aliquotSum2(12) == 16);\n    System.out.println(aliquotSum2(15) == 9);\n  }\n\n  /**\n   * find the aliquot sum of an integer number\n   *\n   * @param n a positive integer\n   * @return aliquot sum of given {@code n}\n   */\n  public static int aliquotSum1(int n) {\n    int sum = 0; \n\n    for (int i = 1; i < n; i++) {\n      if (n % i == 0) {\n        sum += i;\n      }\n    }\n\n    return sum;\n  }\n\n  /**\n   * find the aliquot sum of an integer number\n   *\n   * @param n a positive integer\n   * @return aliquot sum of given {@code n}\n   */\n  public static int aliquotSum2(int n) {\n    int sum = 0;\n\n    for (int i = 1, limit = n / 2; i <= limit; ++i) {\n      if (n % i == 0) {\n        sum += i;\n      }\n    }\n\n    return sum;\n  }\n}\n")))}s&&s===Object(s)&&Object.isExtensible(s)&&Object.defineProperty(s,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"src/docs/documentation/maths/aliquotsum.en.mdx"}}),s.isMDXComponent=!0}}]);
//# sourceMappingURL=src-docs-documentation-maths-aliquotsum-en.8c24fd80ddc924413b3c.js.map