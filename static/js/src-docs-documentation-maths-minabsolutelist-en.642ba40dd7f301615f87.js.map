{"version":3,"sources":["/home/bunlong/workspace/os/algorithmshub/algorithmshub-site/src/docs/documentation/maths/minabsolutelist.en.mdx"],"names":["layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"uYASMA,EAAc,GAIL,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,kBACE,GAAM,mBADR,mBAGA,qBAAG,sBAAQC,WAAW,KAAnB,YACH,qEACA,qBAAG,sBAAQA,WAAW,KAAnB,aACH,sBACE,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,2CACpB,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,0CAEtB,qBAAG,sBAAQA,WAAW,KAAnB,SACH,uBAAK,oBAAMA,WAAW,MAClB,UAAa,eADZ,glB,yMA6BTJ,EAAWK,gBAAiB","file":"static/js/src-docs-documentation-maths-minabsolutelist-en.c21bd7ea.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"minabsolutelist\"\n    }}>{`MinAbsoluteList`}</h1>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <p>{`Find the minimum absolute value of an array.`}</p>\n    <p><strong parentName=\"p\">{`Expected`}</strong></p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`findMinAbsolute([0, -5, -1, 11]) === 0`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`findMinAbsolute([7 , -17, -9]) === 7`}</inlineCode></li>\n    </ul>\n    <p><strong parentName=\"p\">{`Java`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`public class MinAbsoluteList {\n  public static void main(String[] args) {\n    System.out.println(findMinAbsolute(new int[]{ 0, -5, -1, 11 }) == 0);\n    System.out.println(findMinAbsolute(new int[]{ 7 , -17, -9 }) == 7);\n  }\n\n  public static int findMinAbsolute(int[] a) {\n    int minAbsValue = a[0];\n\n    for (int i = 1, length = a.length; i < length; ++i) {\n      if (absVal(a[i]) < absVal(minAbsValue)) {\n        minAbsValue = a[i];\n      }\n    }\n\n    return minAbsValue;\n  }\n\n  public static int absVal(int value) {\n    return value < 0 ? -value : value;\n  }\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}