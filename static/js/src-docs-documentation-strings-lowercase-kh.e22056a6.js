(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{"./src/docs/documentation/strings/lowercase.kh.mdx":function(e,t,a){"use strict";a.r(t),a.d(t,"default",(function(){return s}));var n=a("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),r=(a("./node_modules/react/index.js"),a("./node_modules/@mdx-js/react/dist/esm.js")),o={};function s(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(r.b)("wrapper",Object.assign({},o,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"lowercase"},"LowerCase"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Example")),Object(r.b)("p",null,"Write a function to convert the characters of the string into lower case."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Expected")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},'toLowerCase("ABC")')," equals to ",Object(r.b)("inlineCode",{parentName:"li"},'"ABC".toLowerCase()')),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},'toLowerCase("ABC123")')," equals to ",Object(r.b)("inlineCode",{parentName:"li"},'"ABC123".toLowerCase()')),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},'toLowerCase("abcABC")')," equals to ",Object(r.b)("inlineCode",{parentName:"li"},'"abcABC".toLowerCase()')),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},'toLowerCase("abc123ABC")')," equals to ",Object(r.b)("inlineCode",{parentName:"li"},'"abc123ABC".toLowerCase()'))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Java")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-js"},'public class LowerCase {\n  public static void main(String[] args) {\n    System.out.println(toLowerCase("ABC").equals("ABC".toLowerCase()));\n    System.out.println(toLowerCase("ABC123").equals("ABC123".toLowerCase()));\n    System.out.println(toLowerCase("abcABC").equals("abcABC".toLowerCase()));\n    System.out.println(toLowerCase("abc123ABC").equals("abc123ABC".toLowerCase()));\n  }\n\n  public static String toLowerCase(String str) {\n    char[] chars = str.toCharArray();\n\n    for (int i = 0; i < chars.length; ++i) {\n      if (Character.isLetter(chars[i]) && Character.isUpperCase(chars[i])) {\n        chars[i] = Character.toLowerCase(chars[i]);\n      }\n    }\n\n    return new String(chars);\n  }\n}\n')))}s&&s===Object(s)&&Object.isExtensible(s)&&Object.defineProperty(s,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"src/docs/documentation/strings/lowercase.kh.mdx"}}),s.isMDXComponent=!0}}]);
//# sourceMappingURL=src-docs-documentation-strings-lowercase-kh.2996003d06fac7d5f91f.js.map