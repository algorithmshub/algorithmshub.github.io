(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{"./src/docs/documentation/maths/aliquotsum.en.mdx":function(n,e,t){"use strict";t.r(e),t.d(e,"default",(function(){return a}));var i=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),o=(t("./node_modules/react/index.js"),t("./node_modules/@mdx-js/react/dist/esm.js")),u={};function a(n){var e=n.components,t=Object(i.a)(n,["components"]);return Object(o.b)("wrapper",Object.assign({},u,t,{components:e,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"aliquotsum"},"AliquotSum"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"What is Aliquot Sum?")),Object(o.b)("p",null,"In number theory, the aliquot sum s(n) of a positive integer n is the sum of all proper divisors of n, that is, all divisors of n other than n itself."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Example")),Object(o.b)("p",null,"Input: ",Object(o.b)("inlineCode",{parentName:"p"},"12")),Object(o.b)("p",null,"Output: ",Object(o.b)("inlineCode",{parentName:"p"},"16")),Object(o.b)("p",null,"Explanation: proper divisors of ",Object(o.b)("inlineCode",{parentName:"p"},"12")," is ",Object(o.b)("inlineCode",{parentName:"p"},"1, 2, 3, 4, 6")," and sum is ",Object(o.b)("inlineCode",{parentName:"p"},"1 + 2 + 3 + 4 + 6 = 16"),"."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Java")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"public class AliquotSum {\n  public static void main(String[] args) {\n    System.out.println(aliquotSum1(12) == 16);\n    System.out.println(aliquotSum1(15) == 9);\n\n    System.out.println(aliquotSum2(12) == 16);\n    System.out.println(aliquotSum2(15) == 9);\n  }\n\n  public static int aliquotSum1(int n) {\n    int sum = 0; \n\n    for (int i = 1; i < n; i++) {\n      if (n % i == 0) {\n        sum += i;\n      }\n    }\n\n    return sum;\n  }\n\n  public static int aliquotSum2(int n) {\n    int sum = 0;\n\n    for (int i = 1, limit = n / 2; i <= limit; ++i) {\n      if (n % i == 0) {\n        sum += i;\n      }\n    }\n\n    return sum;\n  }\n}\n")))}a&&a===Object(a)&&Object.isExtensible(a)&&Object.defineProperty(a,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"src/docs/documentation/maths/aliquotsum.en.mdx"}}),a.isMDXComponent=!0}}]);
//# sourceMappingURL=src-docs-documentation-maths-aliquotsum-en.642ba40dd7f301615f87.js.map