{"version":3,"sources":["/home/bunlong/workspace/os/algorithmshub/algorithmshub-site/src/docs/documentation/strings/oppositecase.kh.mdx"],"names":["layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"sYASMA,EAAc,GAIL,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,kBACE,GAAM,gBADR,gBAGA,qBAAG,sBAAQC,WAAW,KAAnB,YACH,qGACA,qBAAG,sBAAQA,WAAW,KAAnB,aACH,sBACE,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,mCAApB,cAA+G,0BAAYA,WAAW,MAAvB,oBAC/G,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,qCAApB,cAAiH,0BAAYA,WAAW,MAAvB,uBAEnH,kBACE,GAAM,YADR,YAGA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,eADZ,ktB,wMA4BTJ,EAAWK,gBAAiB","file":"static/js/src-docs-documentation-strings-oppositecase-kh.3896cf36.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"oppositecase\"\n    }}>{`OppositeCase`}</h1>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <p>{`Write a function to convert the characters of the string into opposite case.`}</p>\n    <p><strong parentName=\"p\">{`Expected`}</strong></p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`toOppositeCase(\"algoRithmsHub\")`}</inlineCode>{` equals to `}<inlineCode parentName=\"li\">{`\"ALGOrITHMShUB\"`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`toOppositeCase(\"hello every one\")`}</inlineCode>{` equals to `}<inlineCode parentName=\"li\">{`\"HELLO EVERY ONE\"`}</inlineCode></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"solution\"\n    }}>{`Solution`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`public class OppositeCase {\n  public static void main(String[] args) {\n    System.out.println(toOppositeCase(\"algoRithmsHub\").equals(\"ALGOrITHMShUB\"));\n    System.out.println(toOppositeCase(\"hello every one\").equals(\"HELLO EVERY ONE\"));\n  }\n\n  public static String toOppositeCase(String str) {\n    char[] chars = str.toCharArray();\n    StringBuffer strBuffer = new StringBuffer(str);\n\n    for (int i = 0; i < chars.length; ++i) {\n      if (Character.isLowerCase(chars[i])) {\n        strBuffer.replace(i, i + 1, Character.toUpperCase(chars[i]) + \"\");\n      } else {\n        strBuffer.replace(i, i + 1, Character.toLowerCase(chars[i]) + \"\");\n      }\n    }\n\n    return new String(strBuffer);\n  }\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}