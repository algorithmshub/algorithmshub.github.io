{"version":3,"sources":["/home/bunlong/workspace/os/algorithmshub/algorithmshub-site/src/docs/documentation/maths/factorialrecursion.en.mdx"],"names":["layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"0YASMA,EAAc,GAIL,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,kBACE,GAAM,sBADR,sBAGA,qBAAG,sBAAQC,WAAW,KAAnB,uBACH,+IACA,qBAAG,0BAAYA,WAAW,KAAvB,uDACH,qBAAG,sBAAQA,WAAW,KAAnB,YACH,0EAAyD,kBAAIA,WAAW,KAAf,OAAzD,MAA+F,kBAAIA,WAAW,KAAf,OAA/F,aACA,sFACA,qBAAG,sBAAQA,WAAW,KAAnB,SACH,uBAAK,oBAAMA,WAAW,MAClB,UAAa,eADZ,4f,4MAyBTJ,EAAWK,gBAAiB","file":"static/js/src-docs-documentation-maths-factorialrecursion-en.d98f6df0.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"factorialrecursion\"\n    }}>{`FactorialRecursion`}</h1>\n    <p><strong parentName=\"p\">{`What is Factorial?`}</strong></p>\n    <p>{`The factorial of a positive integer n, denoted by n!, is the product of all positive integers less than or equal to n.`}</p>\n    <p><inlineCode parentName=\"p\">{`n! = n * (n - 1) * (n - 2) * (n - 3) ... 3 * 2 * 1`}</inlineCode></p>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <p>{`The factorial of 0! is 1 The factorial of 5! is 5 `}<em parentName=\"p\">{` 4 `}</em>{` 3 `}<em parentName=\"p\">{` 2 `}</em>{` 1 = 120.`}</p>\n    <p>{`Write a function to calculate factorial of n using iteration.`}</p>\n    <p><strong parentName=\"p\">{`Java`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`public class FactorialRecursion {\n  public static void main(String[] args) {\n    System.out.println(factorial(0) == 1);\n    System.out.println(factorial(1) == 1);\n    System.out.println(factorial(2) == 2);\n    System.out.println(factorial(3) == 6);\n  }\n\n  /**\n   * Calculate factorial of n using recursion\n   *\n   * @param n the number\n   * @return the factorial of {@code n}\n   */\n  public static long factorial(int n) {\n    return n == 0 || n == 1 ? 1 : n * factorial(n - 1);\n  }\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}