(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{"./src/docs/documentation/assignments/assignment3.mdx":function(t,e,a){"use strict";a.r(e),a.d(e,"default",(function(){return c}));var n=a("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),r=(a("./node_modules/react/index.js"),a("./node_modules/@mdx-js/react/dist/esm.js")),b={};function c(t){var e=t.components,a=Object(n.a)(t,["components"]);return Object(r.b)("wrapper",Object.assign({},b,a,{components:e,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"assignment3"},"Assignment3"),Object(r.b)("p",null,"Write a function that:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"accepts a character array, a zero-based start position, and a length"),Object(r.b)("li",{parentName:"ul"},"it should return a character array containing length characters starting with the start character of the input array"),Object(r.b)("li",{parentName:"ul"},"the function should do error checking on the start position and the length and return null if the either value is not legal")),Object(r.b)("p",null,"The function signature is ",Object(r.b)("inlineCode",{parentName:"p"},"char[] f(char[] a, int start, int len)")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:"left"},"Input params"),Object(r.b)("th",{parentName:"tr",align:"left"},"Return"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"{'a', 'b', 'c'}, 0, 4"),Object(r.b)("td",{parentName:"tr",align:"left"},"null")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"{'a', 'b', 'c'}, 0, 3"),Object(r.b)("td",{parentName:"tr",align:"left"},"{'a', 'b', 'c'}")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"{'a', 'b', 'c'}, 0, 2"),Object(r.b)("td",{parentName:"tr",align:"left"},"{'a', 'b'}")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"{'a', 'b', 'c'}, 0, 1"),Object(r.b)("td",{parentName:"tr",align:"left"},"{'a'}")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"{'a', 'b', 'c'}, 1, 3"),Object(r.b)("td",{parentName:"tr",align:"left"},"null")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"{'a', 'b', 'c'}, 1, 2"),Object(r.b)("td",{parentName:"tr",align:"left"},"{'b', 'c'}")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"{'a', 'b', 'c'}, 1, 1"),Object(r.b)("td",{parentName:"tr",align:"left"},"{'b'}")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"{'a', 'b', 'c'}, 2, 2"),Object(r.b)("td",{parentName:"tr",align:"left"},"null")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"{'a', 'b', 'c'}, 2, 1"),Object(r.b)("td",{parentName:"tr",align:"left"},"{'c'}")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"{'a', 'b', 'c'}, 3, 1"),Object(r.b)("td",{parentName:"tr",align:"left"},"null")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"{'a', 'b', 'c'}, 1, 0"),Object(r.b)("td",{parentName:"tr",align:"left"},"{}")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"{'a', 'b', 'c'}, -1, 2"),Object(r.b)("td",{parentName:"tr",align:"left"},"null")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"{'a', 'b', 'c'}, -1, -2"),Object(r.b)("td",{parentName:"tr",align:"left"},"null")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"{}, 0, 1"),Object(r.b)("td",{parentName:"tr",align:"left"},"null")))),Object(r.b)("h3",{id:"solution"},"Solution"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},"public class Assignment3 {\n  public static void main(String[] args) {\n    System.out.println(f(new char[]{'a', 'b', 'c'}, 0, 4));\n    System.out.println(f(new char[]{'a', 'b', 'c'}, 0, 3));\n    System.out.println(f(new char[]{'a', 'b', 'c'}, 0, 2));\n    System.out.println(f(new char[]{'a', 'b', 'c'}, 0, 1));\n    System.out.println(f(new char[]{'a', 'b', 'c'}, 1, 3));\n    System.out.println(f(new char[]{'a', 'b', 'c'}, 1, 2));\n    System.out.println(f(new char[]{'a', 'b', 'c'}, 1, 1));\n    System.out.println(f(new char[]{'a', 'b', 'c'}, 2, 2));\n    System.out.println(f(new char[]{'a', 'b', 'c'}, 2, 1));\n    System.out.println(f(new char[]{'a', 'b', 'c'}, 3, 1));\n    System.out.println(f(new char[]{'a', 'b', 'c'}, 1, 0));\n    System.out.println(f(new char[]{'a', 'b', 'c'}, -1, 2));\n    System.out.println(f(new char[]{'a', 'b', 'c'}, -1, -2));\n  }\n\n  public static char[] f(char[] a, int start, int length) {\n    if (start < 0 || length < 0 || (start + length - 1 >= a.length)) {\n      return null;\n    }\n\n    char[] chars = new char[length];\n\n    for (int i = start, j = 0; i < length; i++, j++) {\n      chars[j] = a[i];\n    }\n\n    return chars;\n  }\n}\n")))}c&&c===Object(c)&&Object.isExtensible(c)&&Object.defineProperty(c,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"src/docs/documentation/assignments/assignment3.mdx"}}),c.isMDXComponent=!0}}]);
//# sourceMappingURL=src-docs-documentation-assignments-assignment3.642ba40dd7f301615f87.js.map