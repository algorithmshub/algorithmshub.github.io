{"version":3,"sources":["/home/bunlong/workspace/os/algorithmshub/algorithmshub-site/src/docs/documentation/strings/pangram.en.mdx"],"names":["layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"iYASMA,EAAc,GAIL,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,kBACE,GAAM,WADR,WAGA,qBAAG,sBAAQC,WAAW,KAAnB,qBACH,qGACA,qBAAG,sBAAQA,WAAW,KAAnB,YACH,0FACA,qBAAG,sBAAQA,WAAW,KAAnB,SACH,uBAAK,oBAAMA,WAAW,MAClB,UAAa,eADZ,uxB,mMAoCTJ,EAAWK,gBAAiB","file":"static/js/src-docs-documentation-strings-pangram-en.c5ee474c.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"pangram\"\n    }}>{`Pangram`}</h1>\n    <p><strong parentName=\"p\">{`What is Pangram?`}</strong></p>\n    <p>{`Pangram is a sentence  using every letter of a given alphabet at least once.`}</p>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <p>{`Write a function to check if a string is a pangram string or not.`}</p>\n    <p><strong parentName=\"p\">{`Java`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`public class Pangram {\n  public static void main(String[] args) {\n    System.out.println(isPangram(\"abcdefghijklmnopqrstuvwxyz\"));\n    /* Not exists z character */\n    System.out.println(isPangram(\"abcdefghijklmnopqrstuvwxy\"));\n  }\n\n  public static boolean isPangram(String str) {\n    /* All letters don't exists by default */\n    boolean[] marked = new boolean[26];\n    char[] values = str.toCharArray();\n\n    for (char value : values) {\n      if (Character.isLetter(value)) {\n        int index = Character.isUpperCase(value) ? value - 'A' : value - 'a';\n        /* Mark current character exists */\n        marked[index] = true;\n      }\n    }\n\n    for (boolean b : marked) {\n      if (!b) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}