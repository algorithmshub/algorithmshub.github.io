{"version":3,"sources":["/home/bunlong/workspace/os/algorithmshub/algorithmshub-site/src/docs/documentation/strings/alphabetical.en.mdx"],"names":["layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"sYASMA,EAAc,GAIL,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,kBACE,GAAM,gBADR,gBAGA,qBAAG,sBAAQC,WAAW,KAAnB,0BACH,0LACA,qBAAG,sBAAQA,WAAW,KAAnB,YACH,4FACA,qBAAG,sBAAQA,WAAW,KAAnB,SACH,uBAAK,oBAAMA,WAAW,MAClB,UAAa,eADZ,giB,wMA4BTJ,EAAWK,gBAAiB","file":"static/js/src-docs-documentation-strings-alphabetical-en.5dccf041.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"alphabetical\"\n    }}>{`Alphabetical`}</h1>\n    <p><strong parentName=\"p\">{`What is Alphabetical?`}</strong></p>\n    <p>{`Alphabetical order is a system whereby character strings are placed in order based on the position of the characters in the conventional ordering of an alphabet.`}</p>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <p>{`Write a function to check if a string is alphabetical order or not.`}</p>\n    <p><strong parentName=\"p\">{`Java`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`class Alphabetical {\n  public static void main(String[] args) {\n    assert !isAlphabetical(\"123abc\");\n    assert isAlphabetical(\"aBC\");\n    assert isAlphabetical(\"abc\");\n    assert !isAlphabetical(\"xyzabc\");\n    assert isAlphabetical(\"abcxyz\");\n  }\n\n  public static boolean isAlphabetical(String s) {\n    s = s.toLowerCase();\n\n    for (int i = 0; i < s.length() - 1; ++i) {\n      if (!Character.isLetter(s.charAt(i)) || !(s.charAt(i) <= s.charAt(i + 1))) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}