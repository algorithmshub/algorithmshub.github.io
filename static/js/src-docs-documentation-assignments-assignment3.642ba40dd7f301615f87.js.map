{"version":3,"sources":["/home/bunlong/workspace/os/algorithmshub/algorithmshub-site/src/docs/documentation/assignments/assignment3.mdx"],"names":["layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"qYASMA,EAAc,GAIL,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,kBACE,GAAM,eADR,eAGA,+CACA,sBACE,kBAAIC,WAAW,MAAf,wEACA,kBAAIA,WAAW,MAAf,wHACA,kBAAIA,WAAW,MAAf,gIAEF,kDAAiC,0BAAYA,WAAW,KAAvB,2CACjC,yBACE,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,QADX,gBAGA,kBAAIA,WAAW,KACb,MAAS,QADX,YAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,QADX,yBAGA,kBAAIA,WAAW,KACb,MAAS,QADX,SAIF,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,QADX,yBAGA,kBAAIA,WAAW,KACb,MAAS,QADX,oBAIF,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,QADX,yBAGA,kBAAIA,WAAW,KACb,MAAS,QADX,eAIF,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,QADX,yBAGA,kBAAIA,WAAW,KACb,MAAS,QADX,UAIF,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,QADX,yBAGA,kBAAIA,WAAW,KACb,MAAS,QADX,SAIF,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,QADX,yBAGA,kBAAIA,WAAW,KACb,MAAS,QADX,eAIF,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,QADX,yBAGA,kBAAIA,WAAW,KACb,MAAS,QADX,UAIF,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,QADX,yBAGA,kBAAIA,WAAW,KACb,MAAS,QADX,SAIF,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,QADX,yBAGA,kBAAIA,WAAW,KACb,MAAS,QADX,UAIF,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,QADX,yBAGA,kBAAIA,WAAW,KACb,MAAS,QADX,SAIF,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,QADX,yBAGA,kBAAIA,WAAW,KACb,MAAS,QADX,OAIF,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,QADX,0BAGA,kBAAIA,WAAW,KACb,MAAS,QADX,SAIF,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,QADX,2BAGA,kBAAIA,WAAW,KACb,MAAS,QADX,SAIF,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,QADX,YAGA,kBAAIA,WAAW,KACb,MAAS,QADX,WAMN,kBACE,GAAM,YADR,YAGA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,iBADZ,+qC,wMAsCTJ,EAAWK,gBAAiB","file":"static/js/src-docs-documentation-assignments-assignment3.19080c38.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"assignment3\"\n    }}>{`Assignment3`}</h1>\n    <p>{`Write a function that:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`accepts a character array, a zero-based start position, and a length`}</li>\n      <li parentName=\"ul\">{`it should return a character array containing length characters starting with the start character of the input array`}</li>\n      <li parentName=\"ul\">{`the function should do error checking on the start position and the length and return null if the either value is not legal`}</li>\n    </ul>\n    <p>{`The function signature is `}<inlineCode parentName=\"p\">{`char[] f(char[] a, int start, int len)`}</inlineCode></p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Input params`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Return`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`{'a', 'b', 'c'}, 0, 4`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`null`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`{'a', 'b', 'c'}, 0, 3`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`{'a', 'b', 'c'}`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`{'a', 'b', 'c'}, 0, 2`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`{'a', 'b'}`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`{'a', 'b', 'c'}, 0, 1`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`{'a'}`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`{'a', 'b', 'c'}, 1, 3`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`null`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`{'a', 'b', 'c'}, 1, 2`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`{'b', 'c'}`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`{'a', 'b', 'c'}, 1, 1`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`{'b'}`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`{'a', 'b', 'c'}, 2, 2`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`null`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`{'a', 'b', 'c'}, 2, 1`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`{'c'}`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`{'a', 'b', 'c'}, 3, 1`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`null`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`{'a', 'b', 'c'}, 1, 0`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`{}`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`{'a', 'b', 'c'}, -1, 2`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`null`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`{'a', 'b', 'c'}, -1, -2`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`null`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`{}, 0, 1`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`null`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"solution\"\n    }}>{`Solution`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class Assignment3 {\n  public static void main(String[] args) {\n    System.out.println(f(new char[]{'a', 'b', 'c'}, 0, 4));\n    System.out.println(f(new char[]{'a', 'b', 'c'}, 0, 3));\n    System.out.println(f(new char[]{'a', 'b', 'c'}, 0, 2));\n    System.out.println(f(new char[]{'a', 'b', 'c'}, 0, 1));\n    System.out.println(f(new char[]{'a', 'b', 'c'}, 1, 3));\n    System.out.println(f(new char[]{'a', 'b', 'c'}, 1, 2));\n    System.out.println(f(new char[]{'a', 'b', 'c'}, 1, 1));\n    System.out.println(f(new char[]{'a', 'b', 'c'}, 2, 2));\n    System.out.println(f(new char[]{'a', 'b', 'c'}, 2, 1));\n    System.out.println(f(new char[]{'a', 'b', 'c'}, 3, 1));\n    System.out.println(f(new char[]{'a', 'b', 'c'}, 1, 0));\n    System.out.println(f(new char[]{'a', 'b', 'c'}, -1, 2));\n    System.out.println(f(new char[]{'a', 'b', 'c'}, -1, -2));\n  }\n\n  public static char[] f(char[] a, int start, int length) {\n    if (start < 0 || length < 0 || (start + length - 1 >= a.length)) {\n      return null;\n    }\n\n    char[] chars = new char[length];\n\n    for (int i = start, j = 0; i < length; i++, j++) {\n      chars[j] = a[i];\n    }\n\n    return chars;\n  }\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}