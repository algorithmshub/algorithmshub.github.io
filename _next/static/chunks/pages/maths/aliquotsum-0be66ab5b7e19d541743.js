_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[10],{"7ljp":function(n,t,e){"use strict";e.d(t,"a",(function(){return p})),e.d(t,"b",(function(){return b}));var r=e("q1tI"),i=e.n(r);function o(n,t,e){return t in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}function a(n,t){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),e.push.apply(e,r)}return e}function u(n){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?a(Object(e),!0).forEach((function(t){o(n,t,e[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):a(Object(e)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(e,t))}))}return n}function c(n,t){if(null==n)return{};var e,r,i=function(n,t){if(null==n)return{};var e,r,i={},o=Object.keys(n);for(r=0;r<o.length;r++)e=o[r],t.indexOf(e)>=0||(i[e]=n[e]);return i}(n,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(r=0;r<o.length;r++)e=o[r],t.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(n,e)&&(i[e]=n[e])}return i}var l=i.a.createContext({}),s=function(n){var t=i.a.useContext(l),e=t;return n&&(e="function"===typeof n?n(t):u(u({},t),n)),e},p=function(n){var t=s(n.components);return i.a.createElement(l.Provider,{value:t},n.children)},f={inlineCode:"code",wrapper:function(n){var t=n.children;return i.a.createElement(i.a.Fragment,{},t)}},m=i.a.forwardRef((function(n,t){var e=n.components,r=n.mdxType,o=n.originalType,a=n.parentName,l=c(n,["components","mdxType","originalType","parentName"]),p=s(e),m=r,b=p["".concat(a,".").concat(m)]||p[m]||f[m]||o;return e?i.a.createElement(b,u(u({ref:t},l),{},{components:e})):i.a.createElement(b,u({ref:t},l))}));function b(n,t){var e=arguments,r=t&&t.mdxType;if("string"===typeof n||r){var o=e.length,a=new Array(o);a[0]=m;var u={};for(var c in t)hasOwnProperty.call(t,c)&&(u[c]=t[c]);u.originalType=n,u.mdxType="string"===typeof n?n:r,a[1]=u;for(var l=2;l<o;l++)a[l]=e[l];return i.a.createElement.apply(null,a)}return i.a.createElement.apply(null,e)}m.displayName="MDXCreateElement"},BAgm:function(n,t,e){(window.__NEXT_P=window.__NEXT_P||[]).push(["/maths/aliquotsum",function(){return e("YrhP")}])},HALo:function(n,t,e){"use strict";function r(){return(r=Object.assign||function(n){for(var t=1;t<arguments.length;t++){var e=arguments[t];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r])}return n}).apply(this,arguments)}e.d(t,"a",(function(){return r}))},Qetd:function(n,t,e){"use strict";var r=Object.assign.bind(Object);n.exports=r,n.exports.default=n.exports},YrhP:function(n,t,e){"use strict";e.r(t),e.d(t,"meta",(function(){return c})),e.d(t,"default",(function(){return s}));var r=e("HALo"),i=e("dhJC"),o=e("q1tI"),a=e.n(o),u=e("7ljp"),c=(a.a.createElement,{name:"AliquotSum",tableOfContents:{depth:0,children:[{depth:1,slug:"#aliquotsum",title:"AliquotSum",children:[{depth:2,slug:"#java",title:"Java"}]}]}}),l={meta:c};function s(n){var t=n.components,e=Object(i.a)(n,["components"]);return Object(u.b)("wrapper",Object(r.a)({},l,e,{components:t,mdxType:"MDXLayout"}),Object(u.b)("h1",{id:"aliquotsum"},"AliquotSum"),Object(u.b)("p",null,Object(u.b)("strong",{parentName:"p"},"What is Aliquot sum?")),Object(u.b)("p",null,"In number theory, the aliquot sum s(n) of a positive integer n is the sum of all proper divisors of n, that is, all divisors of n other than n itself."),Object(u.b)("h2",{id:"java"},"Java"),Object(u.b)("pre",null,Object(u.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"/**\n * Input : 12\n * Output : 16\n * Explanation :\n *  Proper divisors of 12 is 1, 2, 3, 4, 6 \n *  and sum is 1 + 2 + 3 + 4 + 6 = 16\n */\npublic class AliquotSum {\n  public static void main(String[] args) {\n    System.out.println(aliquotSum1(12) == 16);\n    System.out.println(aliquotSum1(15) == 9);\n\n    System.out.println(aliquotSum2(12) == 16);\n    System.out.println(aliquotSum2(15) == 9);\n  }\n\n  /**\n   * find the aliquot sum of an integer number\n   *\n   * @param n a positive integer\n   * @return aliquot sum of given {@code n}\n   */\n  public static int aliquotSum1(int n) {\n    int sum = 0; \n\n    for (int i = 1; i < n; i++) {\n      if (n % i == 0) {\n        sum += i;\n      }\n    }\n\n    return sum;\n  }\n\n  /**\n   * find the aliquot sum of an integer number\n   *\n   * @param n a positive integer\n   * @return aliquot sum of given {@code n}\n   */\n  public static int aliquotSum2(int n) {\n    int sum = 0;\n\n    for (int i = 1, limit = n / 2; i <= limit; ++i) {\n      if (n % i == 0) {\n        sum += i;\n      }\n    }\n\n    return sum;\n  }\n}\n")))}s.isMDXComponent=!0;var p={editThisPagePath:"pages/maths/aliquotsum.mdx"};for(var f in p)window[f]=p[f]},dhJC:function(n,t,e){"use strict";function r(n,t){if(null==n)return{};var e,r,i=function(n,t){if(null==n)return{};var e,r,i={},o=Object.keys(n);for(r=0;r<o.length;r++)e=o[r],t.indexOf(e)>=0||(i[e]=n[e]);return i}(n,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(r=0;r<o.length;r++)e=o[r],t.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(n,e)&&(i[e]=n[e])}return i}e.d(t,"a",(function(){return r}))}},[["BAgm",0,1]]]);